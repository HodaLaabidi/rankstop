# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.28.3"

default_platform :android

platform :android do
  before_all do
     ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
     update_fastlane
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Deploy a beta version to the Google Play"
  lane :beta do
    gradle(task: "assemble" , build_type: "Release")
    upload_to_play_store(track:'beta', apk: 'builds/SteeringIT-rs/android/app/build/outputs/apk/release/app-release.apk')
    slack(message: "Successful distributed a new Beta version")
  end





  desc "Deploy a new production version to the Google Play"
  lane :playstore do
    gradle(task: "assemble" , build_type: "Release")
    upload_to_play_store()
    slack(message: "-'Successful distributed a new Prod version")
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
     slack(
       message: exception.message,
       success: false
     )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: fq

# fastlane reports which actions are used
# No personal data is sent or shared. Learn more at https://github.com/fastlane/enhancer

# # # # # # # # # # # # # # # # default configuration command fastlane init # # # # # # # # # # # # #
  # desc "Submit a new Beta Build to Crashlytics Beta"
  # lane :beta do
   #  gradle(task: "assembleRelease")
   #  crashlytics

    # sh "your_script.sh"
    # You can also use other beta testing services here
  # end

  # desc "Deploy a new version to the Google Play"
  # lane :deploy do
   #  gradle(task: "assembleRelease")
   #  supply
  # end


